domain: "Little Red Riding Hood";
goal: !alive(Red);

//landmark: "walk(Red, Home, Forest) & walk(Red, Forest, Cottage)";

// Types
type character extends agent;
type item;
type place;

// Objects
character : Red;
character : Wolf;
character : Grandma;
item : Cookies;
place : Home;
place : Forest;
place : Cottage;

// Properties
boolean : alive(character);
place : location(character);
character : location(item);
boolean : path(place, place);

// Initial State
alive(Red);
alive(Wolf);
alive(Grandma);
location(Red) = Home;
location(Wolf) = Forest;
location(Grandma) = Cottage;
location(Cookies) = Red;
path(Home, Forest);
path(Forest, Home);
path(Forest, Cottage);
path(Cottage, Forest);

// Character goals
intends(Red, location(Cookies) = Grandma);
intends(Grandma, location(Grandma) = Cottage);
intends(Grandma, location(Cookies) = Grandma);
intends(Wolf, !alive(Red));
intends(Wolf, !alive(Grandma));

// Actions
action walk(character character*, place from, place to) {
	precondition: (
		alive(character) &
		location(character) = from &
		path(from, to)
	);
	effect: location(character) = to;
}

action give(character character*, character other, item item, place place){
	precondition: (
		alive(character) &
		alive(other) &
		character != other &
		location(character) = place &
		location(other) = place &
		location(item) = character
	);
	effect: location(item) = other;
}

action eat(character character*, character other, place place){
	precondition: (
		character == Wolf &
		other != Wolf &
		alive(character) &
		alive(other) &
		location(character) = place &
		location(other) = place
	);
	effect: !alive(other);
}